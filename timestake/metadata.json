{
  "source": {
    "hash": "0x5c01704999767e4d6d53995bd44c997ce5b4a937b693f3f1cfcef368c025fd88",
    "language": "ink! 3.0.0-rc9",
    "compiler": "rustc 1.61.0-nightly"
  },
  "contract": {
    "name": "timestake",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [],
          "label": "new",
          "payable": true,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [
        {
          "args": [
            {
              "docs": [],
              "indexed": false,
              "label": "caller",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "timestamp",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 7
              }
            }
          ],
          "docs": [],
          "label": "Connected"
        },
        {
          "args": [
            {
              "docs": [],
              "indexed": false,
              "label": "caller",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "timestamp",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 7
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "reward_to_pay",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 7
              }
            }
          ],
          "docs": [],
          "label": "Disconnected"
        }
      ],
      "messages": [
        {
          "args": [],
          "docs": [],
          "label": "connect",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0x6dea651a"
        },
        {
          "args": [],
          "docs": [],
          "label": "disconnect",
          "mutates": true,
          "payable": true,
          "returnType": null,
          "selector": "0x6e33a829"
        },
        {
          "args": [],
          "docs": [
            " Simply returns the current value of our reward per hour."
          ],
          "label": "get_reward_hourly",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u64"
            ],
            "type": 7
          },
          "selector": "0x159173b6"
        },
        {
          "args": [
            {
              "label": "tokens_per_hour",
              "type": {
                "displayName": [
                  "u64"
                ],
                "type": 7
              }
            }
          ],
          "docs": [],
          "label": "set_reward_hourly",
          "mutates": true,
          "payable": false,
          "returnType": null,
          "selector": "0x5b1426d0"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_total_balance",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u128"
            ],
            "type": 9
          },
          "selector": "0xe9c89f50"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_start_time",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u64"
            ],
            "type": 7
          },
          "selector": "0xcedd67fa"
        },
        {
          "args": [],
          "docs": [
            " Calculate time played in seconds"
          ],
          "label": "get_time_played",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u64"
            ],
            "type": 7
          },
          "selector": "0xdea24990"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "is_connected"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 6
              }
            },
            "name": "start_time"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 6
              }
            },
            "name": "end_time"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 8
              }
            },
            "name": "reward"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 7
              }
            },
            "name": "reward_rate_per_hour"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0500000000000000000000000000000000000000000000000000000000000000",
                "ty": 1
              }
            },
            "name": "owner"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 4
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 3
            }
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 7
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "primitive": "u64"
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 9
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      }
    ]
  }
}